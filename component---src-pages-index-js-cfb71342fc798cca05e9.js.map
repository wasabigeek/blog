{"version":3,"file":"component---src-pages-index-js-cfb71342fc798cca05e9.js","mappings":"6OAIMA,EAAW,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAChD,GAAoCC,EAAAA,EAAAA,WAAS,GAAtCC,EAAP,KAAmBC,EAAnB,KAOA,OACE,2BACE,yBAAIN,GACJ,0BACGC,EAAQM,KAAI,SAAAC,GAAM,OACjB,sBAAIC,MAAOJ,GAAcG,IAAWN,EAAgB,CAAEQ,MAAO,QAASC,WAAY,QAAW,IAC1FH,OAIP,2BACE,0BAAQC,MAAO,CAAEG,YAAa,IAAMC,QAAS,kBAAMP,GAAc,KAAjE,eACA,0BAAQO,QAjBc,WAC1BP,GAAc,GACdH,MAeI,oBAMFW,EAAY,CAChB,CACEd,KAAM,oDACNC,QAAS,CACP,SACA,SACA,UACA,SAEFC,cAAe,WAEjB,CACEF,KAAM,8CACNC,QAAS,CACP,WACA,WACA,SACA,WAEFC,cAAe,WAEjB,CACEF,KAAM,oDACNC,QAAS,CACP,UACA,cACA,eACA,qBAEFC,cAAe,eAEjB,CACEF,KAAM,wEACNC,QAAS,CACP,OACA,OACA,SACA,SAEFC,cAAe,SAiBnB,EAbmB,SAAC,GAA+B,IAAD,IAA5Ba,UAAAA,OAA4B,MAAhBD,EAAgB,EAChD,GAA0CV,EAAAA,EAAAA,UAASY,KAAKC,MAAMD,KAAKE,SAAWH,EAAUI,SAAjFC,EAAP,KAAsBC,EAAtB,KAEA,OAAQ,2BAASZ,MAAO,CAAEa,cAAcC,EAAAA,EAAAA,IAAO,KAC7C,oDACA,gBAACxB,EAAD,iBACMgB,EAAUK,GADhB,CAEEjB,iBAAkB,kBAAMkB,GAAkBD,EAAgB,GAAKL,EAAUI,cCjB/E,EAnDc,SAAC,GAAwB,IAAtBK,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACfC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,2BACEpB,MAAO,CACLa,cAAcC,EAAAA,EAAAA,IAAO,KAGvB,2CACCO,EAAMvB,KAAI,YAAe,IAAZ0B,EAAW,EAAXA,KACNJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKE,OAAOC,KACpD,OACE,2BAASC,IAAKJ,EAAKE,OAAOC,MACxB,8BACE,sBACE3B,MAAO,CACL6B,WAAWf,EAAAA,EAAAA,IAAO,EAAI,GACtBD,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3B,gBAAC,EAAAgB,KAAD,CAAM9B,MAAO,CAAE+B,UAAU,QAAWC,GAAIR,EAAKE,OAAOC,MACjDP,IAGL,6BAAQI,EAAKC,YAAYQ,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAeZ,EAAKa,gBAOzD,gBAAC,EAAAP,KAAD,CAAME,GAAG,QAAQhC,MAAO,CAAEsC,QAAS,QAAST,WAAWf,EAAAA,EAAAA,IAAO,OAC5D,gBAAC,IAAD,CAAiByB,KAAMC,EAAAA,IAAoBxC,MAAO,CAAEG,YAAa,UAAYsC,KAAK,OADpF,eAKF,gBAAC,EAAD,MACA,gBAAC,IAAD","sources":["webpack://wasabigeek/./src/components/WasabiQuiz.js","webpack://wasabigeek/./src/pages/index.js"],"sourcesContent":["import React, { useState } from \"react\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Question = ({ text, answers, correctAnswer, progressQuestion }) => {\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  const triggerNextQuestion = () => {\n    setShowAnswer(false);\n    progressQuestion();\n  }\n\n  return (\n    <div>\n      <p>{text}</p>\n      <ul>\n        {answers.map(answer => (\n          <li style={showAnswer && answer === correctAnswer ? { color: \"green\", fontWeight: \"bold\" } : {}}>\n            {answer}\n          </li>\n        ))}\n      </ul>\n      <div>\n        <button style={{ marginRight: 10 }} onClick={() => setShowAnswer(true)}>Show Answer</button>\n        <button onClick={triggerNextQuestion}>Next Question</button>\n      </div>\n    </div>\n  );\n}\n\nconst QUESTIONS = [\n  {\n    text: \"Which plant belongs to the same family as wasabi?\",\n    answers: [\n      \"Carrot\",\n      \"Potato\",\n      \"Cabbage\",\n      \"Onion\",\n    ],\n    correctAnswer: \"Cabbage\"\n  },\n  {\n    text: \"How long does it take for wasabi to mature?\",\n    answers: [\n      \"6 months\",\n      \"8 months\",\n      \"1 year\",\n      \"2 years\",\n    ],\n    correctAnswer: \"2 years\"\n  },\n  {\n    text: \"What is the main component of wasabi substitutes?\",\n    answers: [\n      \"Mustard\",\n      \"Horseradish\",\n      \"Green Chilli\",\n      \"White Peppercorns\",\n    ],\n    correctAnswer: \"Horseradish\"\n  },\n  {\n    text: \"Which part of the wasabi plant is used to create the sushi condiment?\",\n    answers: [\n      \"Stem\",\n      \"Root\",\n      \"Leaves\",\n      \"Fruit\",\n    ],\n    correctAnswer: \"Stem\"\n  }\n]\n\nconst WasabiQuiz = ({ questions = QUESTIONS }) => {\n  const [questionIndex, setQuestionIndex] = useState(Math.floor(Math.random() * questions.length));\n\n  return (<section style={{ marginBottom: rhythm(2) }}>\n    <h2>Random Wasabi Question</h2>\n    <Question\n      {...questions[questionIndex]}\n      progressQuestion={() => setQuestionIndex((questionIndex + 1) % questions.length)}\n    />\n  </section>\n  )\n}\n\nexport default WasabiQuiz\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\"\nimport \"./fa-styles.css\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport WasabiQuiz from \"../components/WasabiQuiz\"\n\nconst Index = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <section\n        style={{\n          marginBottom: rhythm(2),\n        }}\n      >\n        <h2>From the Blog</h2>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginTop: rhythm(1 / 4),\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n        <Link to=\"/blog\" style={{ display: \"block\", marginTop: rhythm(1.5) }}>\n          <FontAwesomeIcon icon={faAngleDoubleRight} style={{ marginRight: \"0.5rem\" }} size=\"xs\" />more posts\n        </Link>\n      </section>\n\n      <WasabiQuiz />\n      <Bio />\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC },\n      filter: { frontmatter: { published: { eq: true } } },\n      limit: 3\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Question","text","answers","correctAnswer","progressQuestion","useState","showAnswer","setShowAnswer","map","answer","style","color","fontWeight","marginRight","onClick","QUESTIONS","questions","Math","floor","random","length","questionIndex","setQuestionIndex","marginBottom","rhythm","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","node","frontmatter","fields","slug","key","marginTop","Link","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","display","icon","faAngleDoubleRight","size"],"sourceRoot":""}