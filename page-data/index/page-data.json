{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"site":{"siteMetadata":{"title":"wasabigeek"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"In this post, we’ll learn about the Visitor design pattern and it’s tradeoffs by looking at a real world example: Rubocop, a Ruby linting…","fields":{"slug":"/blog/visitor-pattern-in-ruby-rubocop/"},"frontmatter":{"date":"August 09, 2022","title":"Visitor Pattern in Ruby: Examples from Rubocop","description":"The visitor design pattern separates the operation to be performed from the object structure. We look at a concrete implementation in Rubocop, a Ruby linting and formatting library."}}},{"node":{"excerpt":"I paired recently with @andyw8 on the Employee Report kata, which illustrates how tests become more difficult to maintain if they are…","fields":{"slug":"/blog/overspecifying-tests-the-employee-report-kata/"},"frontmatter":{"date":"June 22, 2022","title":"Overspecifying Tests - the Employee Report Kata","description":"Overspecification is when a test unintentionally tests more than it should. Why is this bad? Let's walk through a short kata that brings this to life."}}},{"node":{"excerpt":"In software, coupling is often described as something intrinsic and fixed: code is either coupled or not. I’ve had this viewpoint challenged…","fields":{"slug":"/blog/coupling-and-cohesion-is-a-tradeoff/"},"frontmatter":{"date":"June 08, 2022","title":"Coupling is a Tradeoff","description":"Coupling is usually described as something intrinsic: code is either coupled or not. But Kent Beck argues that it is always with respect to a particular change. What does that mean for us?"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["2744205926","2841359383"]}