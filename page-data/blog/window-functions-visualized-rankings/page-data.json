{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/window-functions-visualized-rankings/","result":{"data":{"site":{"siteMetadata":{"title":"wasabigeek"}},"markdownRemark":{"id":"698ee61b-867e-5319-b05b-a0e73a4bc3eb","excerpt":"Leading from an introduction to Window Function Calls, let‚Äôs dive deeper into the different Window Functions that are available. Today, we‚Äôll look at ,  and‚Ä¶","html":"<p>Leading from an <a href=\"/blog/window-function-calls-an-introduction/\">introduction to Window Function Calls</a>, let‚Äôs dive deeper into the different Window Functions that are available. Today, we‚Äôll look at <code class=\"language-text\">row_number</code>, <code class=\"language-text\">rank</code> and <code class=\"language-text\">dense_rank</code>. We‚Äôll be using the same expenses table from the previous post, which looks something like:</p>\n<table>\n<thead>\n<tr>\n<th>description</th>\n<th>cost</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bus ride</td>\n<td>3</td>\n</tr>\n<tr>\n<td>lunch</td>\n<td>15</td>\n</tr>\n<tr>\n<td>‚Ä¶</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>In the following examples, our window frame will be the whole expenses table, ordered by highest to lowest cost:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n  <span class=\"token punctuation\">[</span> window <span class=\"token keyword\">function</span> <span class=\"token punctuation\">]</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> cost <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  expenses<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">,</span>\n  expenses<span class=\"token punctuation\">.</span>cost\n<span class=\"token keyword\">FROM</span> expenses</code></pre></div>\n<p>![picture]</p>\n<h1>row_number</h1>\n<p>Let‚Äôs start with <code class=\"language-text\">row_number</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> ROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> cost <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>All <code class=\"language-text\">row_number</code> does is add a running number for each row in the frame, starting from 1:</p>\n<table>\n<thead>\n<tr>\n<th>row_number</th>\n<th>description</th>\n<th>cost</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>groceries</td>\n<td>60</td>\n</tr>\n<tr>\n<td>2</td>\n<td>dinner</td>\n<td>35</td>\n</tr>\n<tr>\n<td>3</td>\n<td>taxi</td>\n<td>20</td>\n</tr>\n<tr>\n<td>4</td>\n<td>lunch</td>\n<td>15</td>\n</tr>\n<tr>\n<td>5</td>\n<td>lunch</td>\n<td>15</td>\n</tr>\n<tr>\n<td>6</td>\n<td>supper</td>\n<td>15</td>\n</tr>\n<tr>\n<td>7</td>\n<td>tea break</td>\n<td>5</td>\n</tr>\n<tr>\n<td>8</td>\n<td>bus ride</td>\n<td>4</td>\n</tr>\n<tr>\n<td>9</td>\n<td>bus ride</td>\n<td>3</td>\n</tr>\n<tr>\n<td>10</td>\n<td>bus ride</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h1>dense_rank</h1>\n<p><code class=\"language-text\">dense_rank</code> is more interesting. Reviewing the previous example, we can see that there were a few entries that ‚Äútie‚Äù for the same level. The Postgres documentation refers to these as <strong>peer groups</strong>:</p>\n<p>![picture]</p>\n<p>What <code class=\"language-text\">dense_rank</code> does is add a running number for each <em>peer group</em> in the frame, starting from 1:</p>\n<table>\n<thead>\n<tr>\n<th>dense_rank</th>\n<th>description</th>\n<th>cost</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>groceries</td>\n<td>60</td>\n</tr>\n<tr>\n<td>2</td>\n<td>dinner</td>\n<td>35</td>\n</tr>\n<tr>\n<td>3</td>\n<td>taxi to home</td>\n<td>20</td>\n</tr>\n<tr>\n<td>4</td>\n<td>lunch</td>\n<td>15</td>\n</tr>\n<tr>\n<td>4</td>\n<td>lunch</td>\n<td>15</td>\n</tr>\n<tr>\n<td>4</td>\n<td>supper</td>\n<td>15</td>\n</tr>\n<tr>\n<td>5</td>\n<td>tea break</td>\n<td>5</td>\n</tr>\n<tr>\n<td>6</td>\n<td>bus ride home</td>\n<td>4</td>\n</tr>\n<tr>\n<td>7</td>\n<td>bus ride to work</td>\n<td>3</td>\n</tr>\n<tr>\n<td>7</td>\n<td>bus ride to work</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note</strong>: I‚Äôm actually not sure how Postgres ‚Äúbreaks the tie‚Äù within a peer group - in my small example, it looks like an implicit <code class=\"language-text\">ORDER BY ID DESC</code> was added, but the Postgres <a href=\"https://www.postgresql.org/docs/current/queries-order.html\">docs</a> also say <em>if sorting is not chosen, the rows will be returned in an unspecified order</em> ü§∑‚Äç‚ôÇÔ∏è.</p>\n<h1>rank</h1>\n<p><code class=\"language-text\">rank</code> has one big difference from <code class=\"language-text\">dense_rank</code> - instead of a running number, it considers ‚Äúgaps‚Äù:</p>\n<p>![picture]</p>\n<p>Comparing the results of each function makes the difference clearer:</p>\n<table>\n<thead>\n<tr>\n<th>dense_rank</th>\n<th>rank</th>\n<th>description</th>\n<th>cost</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n<tr>\n<td>5</td>\n<td>7</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n<tr>\n<td>6</td>\n<td>8</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n<tr>\n<td>7</td>\n<td>9</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n<tr>\n<td>7</td>\n<td>9</td>\n<td>‚Ä¶</td>\n<td>‚Ä¶</td>\n</tr>\n</tbody>\n</table>\n<h1>Side by side</h1>\n<p>Finally, let‚Äôs look at results side by side:</p>\n<table>\n<thead>\n<tr>\n<th>row_number</th>\n<th>dense_rank</th>\n<th>rank</th>\n<th>description</th>\n<th>cost</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>groceries</td>\n<td>60</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n<td>dinner</td>\n<td>35</td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>3</td>\n<td>taxi</td>\n<td>20</td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>4</td>\n<td>lunch</td>\n<td>15</td>\n</tr>\n<tr>\n<td>5</td>\n<td>4</td>\n<td>4</td>\n<td>lunch</td>\n<td>15</td>\n</tr>\n<tr>\n<td>6</td>\n<td>4</td>\n<td>4</td>\n<td>supper</td>\n<td>15</td>\n</tr>\n<tr>\n<td>7</td>\n<td>5</td>\n<td>7</td>\n<td>tea break</td>\n<td>5</td>\n</tr>\n<tr>\n<td>8</td>\n<td>6</td>\n<td>8</td>\n<td>bus ride</td>\n<td>4</td>\n</tr>\n<tr>\n<td>9</td>\n<td>7</td>\n<td>9</td>\n<td>bus ride</td>\n<td>3</td>\n</tr>\n<tr>\n<td>10</td>\n<td>7</td>\n<td>9</td>\n<td>bus ride</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p>I hope that helped! Here‚Äôs an <a href=\"http://sqlfiddle.com/#!17/e9ac4/6\">sqlfiddle</a> you can play around with.</p>\n<p>For further reading, take a look at the Postgres docs on <a href=\"https://www.postgresql.org/docs/13/functions-window.html\">Window Functions</a>.</p>","frontmatter":{"title":"Window Functions, Visualized - Rankings","date":"January 04, 2021","description":"Picturing the differences between row_number, rank and dense_rank."}}},"pageContext":{"slug":"/blog/window-functions-visualized-rankings/","previous":{"fields":{"slug":"/blog/window-function-calls-an-introduction/"},"frontmatter":{"title":"Window Function Calls - An Introduction"}},"next":null}},"staticQueryHashes":["1003244115","2841359383"]}