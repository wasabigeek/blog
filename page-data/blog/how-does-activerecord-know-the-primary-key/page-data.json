{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/how-does-activerecord-know-the-primary-key/","result":{"data":{"site":{"siteMetadata":{"title":"wasabigeek"}},"markdownRemark":{"id":"f1832f00-77a4-50bd-94a8-d45d71ac4cd6","excerpt":"While trying to help someone debug an  error, I went down a rabbit-hole trying to figure out how Rails determines the primary key. Hopefully this provides a…","html":"<p>While trying to help someone debug an <code class=\"language-text\">ActiveRecord::UnknownPrimaryKey</code> error, I went down a rabbit-hole trying to figure out how Rails determines the primary key. Hopefully this provides a tiny bit more insight on how Rails works!</p>\n<h2>TL;DR</h2>\n<p>If you’re using Postgres, ActiveRecord searches for a primary key index on the table. If you’re using a different database, the answer probably lies in the respective <code class=\"language-text\">SchemaStatements</code> of the adapter, e.g. <code class=\"language-text\">ActiveRecord::ConnectionAdapters::MySQL::SchemaStatements</code> (<a href=\"https://github.com/rails/rails/blob/main/activerecord/lib/active_record/connection_adapters/mysql/schema_statements.rb\">source</a>).</p>\n<h2>Finding the Primary Key</h2>\n<p><code class=\"language-text\">ActiveRecord::Base</code> includes the <code class=\"language-text\">AttributeMethods</code> module, which in turn includes <code class=\"language-text\">PrimaryKey</code>. The module has a <code class=\"language-text\">#primary_key</code> <a href=\"https://github.com/rails/rails/blob/main/activerecord/lib/active_record/attribute_methods/primary_key.rb#L70\">method</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">primary_key</span></span>\n  <span class=\"token variable\">@primary_key</span> <span class=\"token operator\">=</span> reset_primary_key <span class=\"token keyword\">unless</span> <span class=\"token keyword\">defined</span><span class=\"token operator\">?</span> <span class=\"token variable\">@primary_key</span>\n  <span class=\"token variable\">@primary_key</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>If we follow the <code class=\"language-text\">#reset_primary_key</code> method, we’ll eventually reach <code class=\"language-text\">#get_primary_key</code>, which tries to get the key from the <code class=\"language-text\">SchemaCache</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">get_primary_key</span></span><span class=\"token punctuation\">(</span>base_name<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">if</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">self</span> <span class=\"token operator\">&amp;&amp;</span> table_exists<span class=\"token operator\">?</span>\n      pk <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>schema_cache<span class=\"token punctuation\">.</span>primary_keys<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token comment\"># ...</span>\n    <span class=\"token keyword\">else</span>\n      <span class=\"token comment\"># ...</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>In the <a href=\"https://github.com/rails/rails/blob/v6.1.2.1/activerecord/lib/active_record/connection_adapters/schema_cache.rb\">SchemaCache</a>, we see that if the <code class=\"language-text\">primary_keys</code> cache does not already have the key, it will attempt to call <code class=\"language-text\">connection.primary_key(table_name)</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">primary_keys</span></span><span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span>\n  <span class=\"token variable\">@primary_keys</span><span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token comment\"># if the table_name key isn't in the Hash, execute this block</span>\n\t\t<span class=\"token comment\"># ...</span>\n    <span class=\"token variable\">@primary_keys</span><span class=\"token punctuation\">[</span>deep_deduplicate<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> deep_deduplicate<span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">.</span>primary_key<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>This method is found in <a href=\"https://github.com/rails/rails/blob/v6.1.2.1/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb#L148\">SchemaStatements</a>, and it in turn attempts to call <code class=\"language-text\">#primary_keys</code>. This call goes to the database adapter, in my case <a href=\"https://github.com/rails/rails/blob/main/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb#L356\">PostgreSQL::SchemaStatements</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">primary_keys</span></span><span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span> <span class=\"token comment\"># :nodoc:</span>\n  query_values<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">~</span><span class=\"token constant\">SQL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SCHEMA\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token constant\">SELECT</span> a<span class=\"token punctuation\">.</span>attname\n      <span class=\"token constant\">FROM</span> <span class=\"token punctuation\">(</span>\n             <span class=\"token constant\">SELECT</span>\n               <span class=\"token constant\">FROM</span> pg_index\n              <span class=\"token constant\">WHERE</span> indrelid <span class=\"token operator\">=</span> <span class=\"token comment\">#{quote(quote_table_name(table_name))}::regclass</span>\n                <span class=\"token constant\">AND</span> indisprimary\n           <span class=\"token punctuation\">)</span> i\n      <span class=\"token constant\">JOIN</span> pg_attribute a\n        <span class=\"token constant\">ON</span> a<span class=\"token punctuation\">.</span>attrelid <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>indrelid\n       <span class=\"token constant\">AND</span> a<span class=\"token punctuation\">.</span>attnum <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>indkey<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">.</span>idx<span class=\"token punctuation\">]</span>\n     <span class=\"token constant\">ORDER</span> <span class=\"token constant\">BY</span> i<span class=\"token punctuation\">.</span>idx\n  <span class=\"token constant\">SQL</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>The subquery in particular is crucial - basically, Rails looks for a primary key index belonging to the table. Let’s focus on the important bits:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">/* from all the indexes */</span>\n<span class=\"token keyword\">FROM</span> pg_index\n<span class=\"token comment\">/* find those for table_name */</span>\n<span class=\"token comment\">/* you can google for regclass, it's another Postgres rabbit-hole */</span>\n<span class=\"token keyword\">WHERE</span> indrelid <span class=\"token operator\">=</span> table_name::regclass\n<span class=\"token comment\">/* that are primary keys */</span>\n<span class=\"token operator\">AND</span> indisprimary</code></pre></div>\n<p>This is usually automatically created during a migration - Rails will add an <code class=\"language-text\">id</code> column and make it a primary key. If you have a <code class=\"language-text\">structure.sql</code> file, you’d find statements like <code class=\"language-text\">ADD CONSTRAINT table_name_pkey PRIMARY KEY (id)</code> which do exactly that.</p>\n<h2>Bonus: How did I find it?</h2>\n<p>It took me quite a while to figure this out, I’m sharing my abridged (because I was flailing around a <em>lot</em>) methodology in hopes that it might be helpful to you when debugging - if you know a better way, do share!</p>\n<ul>\n<li>Did a GitHub search in the Rails repo for the UnknownPrimaryKey error. There were a few results that were in the form <code class=\"language-text\">finder_class.primary_key</code>, so I assumed it was a method on the model (and confirmed that by playing around in the rails console).</li>\n<li>Did another search for <code class=\"language-text\">&quot;def primary_key&quot;</code> (“primary_key” alone gave too many results), this led to <code class=\"language-text\">ActiveRecord::AttributeMethods::PrimaryKey</code>.</li>\n<li>Wasn’t sure that this was the correct method but I attempted to follow the code through (GitHub’s <a href=\"https://docs.github.com/en/github/managing-files-in-a-repository/navigating-code-on-github#jumping-to-the-definition-of-a-function-or-method\">jump to definition</a> was a godsend) and got a little stuck/distracted by trying to figure out what class <code class=\"language-text\">connection</code> referred to.</li>\n<li>\n<p>After a bit of poking around in the console, I recalled seeing this class called <a href=\"https://ruby-doc.org/core-2.7.2/TracePoint.html\">TracePoint</a>, and decided to give it a try:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">trace <span class=\"token operator\">=</span> TracePoint<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>:raise<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>tp<span class=\"token operator\">|</span>\n    p <span class=\"token punctuation\">[</span>tp<span class=\"token punctuation\">.</span><span class=\"token keyword\">lineno</span><span class=\"token punctuation\">,</span> tp<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">,</span> tp<span class=\"token punctuation\">.</span>raised_exception<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">end</span>\n\ntrace<span class=\"token punctuation\">.</span><span class=\"token keyword\">enable</span> { ExampleModel<span class=\"token punctuation\">.</span><span class=\"token keyword\">first</span> }</code></pre></div>\n</li>\n<li>\n<p>This gave an extremely long trace 🤯  good thing I could search in my terminal, after grepping for <code class=\"language-text\">primary_keys</code> I came across this set of calls, which confirmed that the method was in <code class=\"language-text\">PostgreSQL::SchemaStatements</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span><span class=\"token number\">48</span>, ActiveRecord::ConnectionAdapters::SchemaCache, :primary_keys, :call<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">53</span>, ActiveRecord::ConnectionAdapters::SchemaCache, :data_source_exists?, :call<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">146</span>, ActiveRecord::ConnectionAdapters::SchemaStatements, :primary_key, :call<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">355</span>, ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements, :primary_keys, :call<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"How does ActiveRecord know the primary_key?","date":"February 13, 2021","description":"A tiny excursion into the world of ActiveRecord, prompted by trying to debug an UnknownPrimaryKey error."}}},"pageContext":{"slug":"/blog/how-does-activerecord-know-the-primary-key/","previous":{"fields":{"slug":"/blog/window-functions-visualised-rankings/"},"frontmatter":{"title":"Window Functions, Visualised - Rankings"}},"next":{"fields":{"slug":"/blog/dont-give-up-on-your-rails-generators/"},"frontmatter":{"title":"Don’t give up on your Rails Generators!"}}}},"staticQueryHashes":["1003244115","2841359383"]}