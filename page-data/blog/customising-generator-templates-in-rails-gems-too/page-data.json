{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blog/customising-generator-templates-in-rails-gems-too/",
    "result": {"data":{"site":{"siteMetadata":{"title":"wasabigeek"}},"markdownRemark":{"id":"fb9da105-4faf-59d4-a484-be4ef3966582","excerpt":"Rails’ generators are a great boon to the Indie HackerTM or Solo DeveloperTM. Running  will quickly bootstrap the full stack for a model, creating the routes…","html":"<p>Rails’ generators are a great boon to the Indie Hacker<sup>TM</sup> or Solo Developer<sup>TM</sup>. Running <code class=\"language-text\">rails g scaffold ...</code> will quickly bootstrap the full stack for a model, creating the routes, controllers, views and even tests.</p>\n<p>As you start customising and standardising your interface though, the default templates get less and less useful - most of the generated code doesn’t fit your layout or setup, and you end up deleting most of it or skipping them.</p>\n<h2 id=\"what-if-we-could-change-the-templates\" style=\"position:relative;\"><a href=\"#what-if-we-could-change-the-templates\" aria-label=\"what if we could change the templates permalink\" class=\"autolink-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What if we could change the… templates?</h2>\n<p>Rails actually gives you a lot of <a href=\"https://guides.rubyonrails.org/generators.html\">control</a> over the generators, but early on in a project, perhaps the most impactful <em>and</em> simple thing to do is to override the <a href=\"https://guides.rubyonrails.org/generators.html#customizing-your-workflow-by-changing-generators-templates\">templates</a>.</p>\n<p>Let’s look at an example. Normally Rails would generate a <code class=\"language-text\">show.html</code> that looks something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"erb\"><pre class=\"language-erb\"><code class=\"language-erb\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>notice<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token ruby language-ruby\"> notice </span><span class=\"token delimiter punctuation\">%></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>Attribute:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token ruby language-ruby\"> <span class=\"token variable\">@object</span><span class=\"token punctuation\">.</span>attribute </span><span class=\"token delimiter punctuation\">%></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token ruby language-ruby\"> link_to <span class=\"token string-literal\"><span class=\"token string\">'Edit'</span></span><span class=\"token punctuation\">,</span> edit_object_path<span class=\"token punctuation\">(</span><span class=\"token variable\">@object</span><span class=\"token punctuation\">)</span> </span><span class=\"token delimiter punctuation\">%></span></span> |\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token ruby language-ruby\"> link_to <span class=\"token string-literal\"><span class=\"token string\">'Back'</span></span><span class=\"token punctuation\">,</span> object_path </span><span class=\"token delimiter punctuation\">%></span></span></code></pre></div>\n<p>For a personal project, I’ve made mine generate something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"erb\"><pre class=\"language-erb\"><code class=\"language-erb\"><span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token ruby language-ruby\"> content_for <span class=\"token symbol\">:breadcrumbs</span> <span class=\"token keyword\">do</span> </span><span class=\"token delimiter punctuation\">%></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    Home > <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token ruby language-ruby\"> <span class=\"token variable\">@object</span><span class=\"token punctuation\">.</span>attribute </span><span class=\"token delimiter punctuation\">%></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token ruby language-ruby\"> <span class=\"token keyword\">end</span> </span><span class=\"token delimiter punctuation\">%></span></span>\n\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token ruby language-ruby\"> content_for <span class=\"token symbol\">:heading</span> <span class=\"token keyword\">do</span> </span><span class=\"token delimiter punctuation\">%></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token ruby language-ruby\"> <span class=\"token variable\">@object</span><span class=\"token punctuation\">.</span>name </span><span class=\"token delimiter punctuation\">%></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token ruby language-ruby\"> link_to <span class=\"token string-literal\"><span class=\"token string\">'Edit object'</span></span><span class=\"token punctuation\">,</span> edit_object_path<span class=\"token punctuation\">(</span><span class=\"token variable\">@object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token symbol\">class</span><span class=\"token operator\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'...'</span></span> <span class=\"token punctuation\">}</span> </span><span class=\"token delimiter punctuation\">%></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token ruby language-ruby\"> <span class=\"token keyword\">end</span> </span><span class=\"token delimiter punctuation\">%></span></span>\n\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token ruby language-ruby\"> content_for <span class=\"token symbol\">:main_content</span> <span class=\"token keyword\">do</span> </span><span class=\"token delimiter punctuation\">%></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token ruby language-ruby\"> <span class=\"token variable\">@object</span><span class=\"token punctuation\">.</span>attribute </span><span class=\"token delimiter punctuation\">%></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token ruby language-ruby\"> <span class=\"token keyword\">end</span> </span><span class=\"token delimiter punctuation\">%></span></span></code></pre></div>\n<p>It’s saved me a lot of time!</p>\n<p>To do so, simply add a template to your Rails project in <code class=\"language-text\">lib/templates/erb/scaffold/show.html.erb</code>. You can use the <a href=\"https://github.com/rails/rails/blob/master/railties/lib/rails/generators/erb/scaffold/templates/show.html.erb.tt\">original</a> as a starting point. The other templates can also be easily changed following a similar path. Note the double percentages (<code class=\"language-text\">%%</code>) used to escape ERB tags!</p>\n<h2 id=\"bonus-gems-too\" style=\"position:relative;\"><a href=\"#bonus-gems-too\" aria-label=\"bonus gems too permalink\" class=\"autolink-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bonus: Gems too!</h2>\n<p>This also works for your gems that have generators (e.g. <a href=\"https://github.com/rspec/rspec-rails\">rspec-rails</a> or <a href=\"https://github.com/reactjs/react-rails\">react-rails</a>), though it’s not obvious where to place the templates.</p>\n<p>Our answer lies in <a href=\"https://github.com/rails/rails/blob/master/railties/lib/rails/generators/base.rb\"><code class=\"language-text\">Rails::Generators::Base.inherited</code></a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">inherited</span></span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> <span class=\"token comment\">#:nodoc:</span>\n  <span class=\"token operator\">...</span>\n  Rails<span class=\"token double-colon punctuation\">::</span>Generators<span class=\"token punctuation\">.</span>templates_path<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>path<span class=\"token operator\">|</span>\n    <span class=\"token keyword\">if</span> base<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token keyword\">include</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"::\"</span></span><span class=\"token punctuation\">)</span>\n      base<span class=\"token punctuation\">.</span>source_paths <span class=\"token operator\">&lt;&lt;</span> <span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> base<span class=\"token punctuation\">.</span>base_name<span class=\"token punctuation\">,</span> base<span class=\"token punctuation\">.</span>generator_name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span>\n      base<span class=\"token punctuation\">.</span>source_paths <span class=\"token operator\">&lt;&lt;</span> <span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> base<span class=\"token punctuation\">.</span>generator_name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>So, in addition to the <code class=\"language-text\">source_root</code> that most Generators would define, Rails will also search a few extra paths. In general, you should place the template in <code class=\"language-text\">lib/templates/&lt;top_level_module>/&lt;generator_class_prefix>/&lt;template_name></code>.</p>\n<p>For example, <code class=\"language-text\">react-rails</code> has <a href=\"https://github.com/reactjs/react-rails/blob/master/lib/generators/react/component_generator.rb\"><code class=\"language-text\">React::Generators::ComponentGenerator</code></a>, so if I wanted to replace <a href=\"https://github.com/reactjs/react-rails/blob/master/lib/generators/templates/component.es6.jsx\"><code class=\"language-text\">component.es6.jsx</code></a>, I would place it in <code class=\"language-text\">lib/templates/react/component/component.es6.jsx</code>.</p>\n<p>I hope that helps!</p>","frontmatter":{"title":"Customising Generator Templates in Rails (Gems too!)","date":"November 07, 2020","description":"Overriding the default templates in Rails and gems is simple and impactful early on in a project. Find out how."}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"When I first came across the concept of Polymorphism in Object-Oriented Programming (OOP), it wasn’t obvious to me why it was important. The…","fields":{"slug":"/blog/why-is-polymorphism-important/"},"frontmatter":{"date":"March 20, 2022","title":"Why use Polymorphism in OOP?","description":"Polymorphism in Object-Oriented Programming, while abstract, is still somewhat easy to understand. Why we should use it, though, is less obvious. Let's investigate polymorphism's benefits!"}}},{"node":{"excerpt":"”A class should only have one reason to change” is a mantra that Object-Oriented advocates have chanted for years. Dubbed the “Single…","fields":{"slug":"/blog/what-does-a-1972-paper-have-to-do-with-the-single-responsibility-principle/"},"frontmatter":{"date":"February 28, 2022","title":"A 1972 paper and the Single Responsibility Principle","description":"While trying to explain the Single Responsibility Principle, it's originator calls attention to the paper 'On the Criteria To Be Used in Decomposing Systems into Modules'. Why was this paper so significant? Let's find out!"}}},{"node":{"excerpt":"Whether out of curiosity or trying to understand a method for debugging, it’s helpful to know how to dig into a Ruby gem. Recently I was…","fields":{"slug":"/blog/reading-a-ruby-gem-with-vscode/"},"frontmatter":{"date":"February 15, 2022","title":"Reading a Ruby gem with VSCode","description":"Steps to try when investigating a gem's implementation in VSCode, using mocha's any_instance as an example."}}}]}},"pageContext":{"slug":"/blog/customising-generator-templates-in-rails-gems-too/","previous":{"fields":{"slug":"/blog/first-steps-to-open-source/"},"frontmatter":{"title":"First Steps into Open Source","tags":null}},"next":{"fields":{"slug":"/blog/2020-in-retrospect-making/"},"frontmatter":{"title":"2020 in Retrospect: Making","tags":null}},"relatedPosts":[]}},
    "staticQueryHashes": ["2744205926","2841359383"]}