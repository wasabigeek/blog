{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blog/mocking-in-rspec-and-minitest-cheatsheat/",
    "result": {"data":{"site":{"siteMetadata":{"title":"wasabigeek"}},"markdownRemark":{"id":"f2a2989b-cda3-5bf4-8292-663745fabb6e","excerpt":"My first exposure to a testing library in Ruby and Rails was RSpec, but I’m now using Minitest. It wasn’t immediately obvious how to translate rspec…","html":"<p>My first exposure to a testing library in Ruby and Rails was RSpec, but I’m now using Minitest. It wasn’t immediately obvious how to translate rspec-expectations and rspec-mocks to Minitest, so here’s my attempt at a cheatsheet:</p>\n<table>\n<thead>\n<tr>\n<th>RSpec</th>\n<th>minitest with <a href=\"https://github.com/freerange/mocha\">mocha</a></th>\n<th>minitest with <a href=\"https://github.com/seattlerb/minitest#mocks-\">minitest/mocks</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">double</code></td>\n<td><code class=\"language-text\">mock</code> or <code class=\"language-text\">stub</code></td>\n<td><code class=\"language-text\">Minitest::Mock.new</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">instance_double</code></td>\n<td><code class=\"language-text\">stub</code> or <code class=\"language-text\">mock.responds_like_instance_of</code></td>\n<td>Not supported</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">expect().to receive().with().and_return()</code></td>\n<td><code class=\"language-text\">mock.expects().with().returns()</code><br/>Note:<ul><li>like RSpec, can also call <code class=\"language-text\">expects</code> on any object, not just a <code class=\"language-text\">Mock</code>/<code class=\"language-text\">Stub</code></li><li><code class=\"language-text\">with</code> has <a href=\"https://github.com/freerange/mocha/issues/446#issuecomment-1006680273\">imprecise keyword arg matching</a> in Ruby 3</li></ul></td>\n<td><code class=\"language-text\">mock = Minitest::Mock.new</code><br/><code class=\"language-text\">mock.expect(:method, args, return)</code><br/><code class=\"language-text\">mock.verify</code><br/>Note: cannot call <code class=\"language-text\">expect</code> on any Object, but can make a Mock <a href=\"https://github.com/seattlerb/minitest/blob/v5.15.0/lib/minitest/mock.rb#L120-L121\">delegate to an underlying object</a></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">expect().not_to receive()</code></td>\n<td><code class=\"language-text\">mock.expects().never</code></td>\n<td>Technically you could use <a href=\"https://github.com/seattlerb/minitest/blob/v5.15.0/lib/minitest/mock.rb#L214\"><code class=\"language-text\">Object#stub</code></a> and raise in the <code class=\"language-text\">val_or_callable</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">expect()... and yield_control()</code></td>\n<td><code class=\"language-text\">mock.expects().yields(*parameters)</code> <br/>See <a href=\"https://www.rubydoc.info/github/floehopper/mocha/Mocha%2FExpectation:yields\">docs</a></td>\n<td>Not supported since return value is not a callable</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">expect()... and raise_error()</code></td>\n<td><code class=\"language-text\">mock.expects().raises(error)</code> <br/>See <a href=\"https://www.rubydoc.info/github/floehopper/mocha/Mocha%2FExpectation:raises\">docs</a></td>\n<td>Can pass in a block (instead of expected args) to <code class=\"language-text\">expect</code> and raise there</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">allow()...</code></td>\n<td>Similar as above but substitute <code class=\"language-text\">expects</code> with <code class=\"language-text\">stubs</code></td>\n<td>Can use <a href=\"https://github.com/seattlerb/minitest/blob/v5.15.0/lib/minitest/mock.rb#L214\"><code class=\"language-text\">Object#stub</code></a></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">.and_call_original</code></td>\n<td>Not supported (see <a href=\"https://github.com/freerange/mocha/issues/334\">reasoning</a>)</td>\n<td>Not supported</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">allow_any_instance_of.Klass</code></td>\n<td><code class=\"language-text\">Klass.any_instance.stubs</code></td>\n<td>Not supported</td>\n</tr>\n</tbody>\n</table>\n<p>It’s very possible I’ve gotten something wrong - please feel free to correct in the comments or submit a PR!</p>\n<h2 id=\"footnotes\" style=\"position:relative;\"><a href=\"#footnotes\" aria-label=\"footnotes permalink\" class=\"autolink-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Footnotes</h2>\n<ul>\n<li>For the curious, I wrote about how <code class=\"language-text\">minitest/mock</code> works <a href=\"https://wasabigeek.com/blog/practical-metaprogramming-in-ruby-minitest-mock/\">here</a></li>\n</ul>","frontmatter":{"title":"Mocking in RSpec VS Minitest: A Cheatsheet","date":"January 05, 2022","description":"A cheatsheet for those who started off with RSpec expectations and mocks, and now need to translate that to Minitest."}}},"pageContext":{"slug":"/blog/mocking-in-rspec-and-minitest-cheatsheat/","previous":{"fields":{"slug":"/blog/my-learning-workflow-for-2022/"},"frontmatter":{"title":"My Learning Workflow for 2022","tags":["knowledge-management"],"date":"2021-12-31","updated_date":null}},"next":{"fields":{"slug":"/blog/practical-metaprogramming-in-ruby-minitest-mock/"},"frontmatter":{"title":"Practical Metaprogramming in Ruby: minitest/mock","tags":["ruby","metaprogramming","testing"],"date":"2022-01-22","updated_date":null}},"relatedPosts":[{"node":{"fields":{"slug":"/blog/overspecifying-tests-the-employee-report-kata/"},"frontmatter":{"title":"Overspecifying Tests - the Employee Report Kata","tags":["katas","testing"],"date":"2022-06-22","updated_date":null}}},{"node":{"fields":{"slug":"/blog/reading-a-ruby-gem-with-vscode/"},"frontmatter":{"title":"Reading a Ruby gem with VSCode","tags":["ruby","vscode"],"date":"2022-02-15","updated_date":null}}},{"node":{"fields":{"slug":"/blog/practical-metaprogramming-in-ruby-minitest-mock/"},"frontmatter":{"title":"Practical Metaprogramming in Ruby: minitest/mock","tags":["ruby","metaprogramming","testing"],"date":"2022-01-22","updated_date":null}}},{"node":{"fields":{"slug":"/blog/how-does-activerecord-know-the-primary-key/"},"frontmatter":{"title":"How does ActiveRecord know the primary_key?","tags":["rails"],"date":"2021-02-13","updated_date":null}}}],"updatedDate":"2022-01-05T23:21:03.284Z"}},
    "staticQueryHashes": ["2744205926","2841359383"]}